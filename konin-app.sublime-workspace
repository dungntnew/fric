{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "fserve/app.js",
			"settings":
			{
				"buffer_size": 4656,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var fs = require('fs');\nvar path = require('path');\nvar f = require('fabric');\nvar __fabric = global.fabric = f.fabric;\n__fabric.Object.prototype.transparentCorners = false;\nvar fontLoader = require('./font');\n\nvar printer = {\n    config: {},\n    identify: \"KEdit_App_Printer_Server\",\n\n    init: function(config) {\n        this.config = config;\n    },\n\n    handler: function(params, callback) {\n        var self = this;\n        if (this.config.use_direct_png_file) {\n            if (!params.template_path || !params.user_picture_path) {\n                var message = !params.template_path ? 'invalid template path - ': '';\n                message += !params.user_picture_path ? 'invalid picture path': '';\n                callback(false, message);\n                return;\n            }\n        } else {\n            if (!params.json || !params.template_path) {\n                var message = !params.template_path ? 'invalid template path - ': '';\n                message += !params.json ? 'invalid json path': '';\n                callback(false, message);\n                return;\n            }\n        }\n\n        this._blend(params, function(canvas, error) {\n            if (error) {\n                if (callback) callback(false, error);\n                return;\n            }\n            var writePdf = function() {\n                \n            }\n\n            self._toPNG(params, canvas, callback);\n        });\n    },\n\n    _applyFont: function(canvas) {\n        fonts = fontLoader.load();\n        fonts.forEach(function(f) {\n            var font = new canvas.Font(f.family, f.path);\n            f.faces.forEach(function(options) {\n                font.addFace(options.path, options.weight, options.decoration);\n            });\n            //canvas.contextContainer.addFont(font);\n            canvas.contextTop.addFont(font);\n        });\n    },\n\n    _load: function(params, callback) {\n        var self = this;\n        var w = this.config.edit_area_width;\n        var h = this.config.edit_area_height;\n        var json = params.json;\n        var content = __fabric.createCanvasForNode(w, h);\n        self._applyFont(content);\n\n        content.loadFromJSON(json, function() {\n            content.forEachObject(function(obj) {\n                var setCoords = obj.setCoords.bind(obj);\n                obj.on({\n                    moving: setCoords,\n                    scaling: setCoords,\n                    rotating: setCoords\n                });\n            });\n            content.renderAll();\n            content.deactivateAll();\n\n            if (callback) callback(content);\n        });\n    },\n\n    _content: function(params, callback) {\n        var self = this;\n        var _ready = function(canvas, error) {\n            if (error) {\n                self._error({\n                    message: 'fail for load content.',\n                    error: error\n                });\n                return;\n            }\n\n            try {\n                var dataURL = canvas.toDataURL({\n                    format: 'png',\n                    multiplier: self.config.multiplier\n                });\n\n                __fabric.Image.fromURL(dataURL, function(image) {\n                    canvas.centerObject(image);\n                    if (callback) callback(image);\n                });\n            } catch (e) {\n                var error = {\n                    message: 'cannot export content to png image.',\n                    error: e\n                };\n                if (callback) callback(null, error);\n            }\n        }\n        self._load(params, _ready);\n    },\n    _direct_content: function(params, callback) {\n     var dataURL = params.user_picture_path;\n        __fabric.Image.fromURL(dataURL, function(image) {\n            if (callback) callback(image);\n        });\n    },\n    _template: function(params, callback) {\n        var self = this;\n        var src = params.template_path;\n\n        var onload = function(image) {\n            var templateHeight = self.config.template_height;\n            image.scaleToHeight(templateHeight);\n            image.setCoords();\n            if (callback) callback(image);\n        }\n\n        try {\n            __fabric.util.loadImage(src, function(image) {\n                onload(new __fabric.Image(image));\n            });\n        } catch (e) {\n            var error = {\n                message: 'cannot load template image.',\n                error: e\n            };\n            if (callback) callback(null, error);\n        }\n\n    },\n\n\n    _blend: function(params, callback) {\n        var self = this;\n\n        var w = this.config.template_width;\n        var h = this.config.template_height;\n        var canvas = __fabric.createCanvasForNode(w, h);\n        canvas.backgroundColor = 'rgba(255, 255, 255, 0.0)';\n        canvas.selection = false;\n        canvas.renderAll();\n\n       \n        self._template(params, function(background, error) {\n            if (error) {\n                if (callback) callback(null, error);\n                return;\n            }\n\n            var content_fetcher = self.config.use_direct_png_file \n                        ? self._direct_content\n                        : self._content;\n\n            content_fetcher(params, function(content, error) {\n                if (error) {\n                    if (callback) callback(null, error);\n                    return;\n                }\n\n                var contentHeight = self.config.edit_area_height;\n                content.scaleToHeight(contentHeight);\n\n                var left = w / 2 + content.width / 2;\n                var top = h / 2 + content.height / 2;\n\n\n                content.set({\n                    originX: 'center',\n                    originY: 'center',\n                    top: top,\n                    left: left,\n                    scaleX: 0.8,\n                    scaleY: 0.8,\n                    selectable: false\n                });\n\n                canvas.add(content);\n                canvas.centerObject(background);\n                canvas.setBackgroundImage(background,\n                    canvas.renderAll.bind(canvas), {\n                        crossOrigin: 'anonymous'\n                    });\n                setTimeout(function() {\n                    if (callback) callback(canvas);\n                }, 100);\n            });\n        });\n    },\n\n    _toPNG: function(params, canvas, callback) {\n        var outpath = params.outpath;\n        var outstream = fs.createWriteStream(outpath);\n        var stream = canvas.createPNGStream();\n        stream.on('data', function(chunk) {\n            outstream.write(chunk);\n        });\n        stream.on('end', function() {\n            callback(outpath);\n            outstream.end();\n        });\n        stream.on('error', function(err) {\n            callback(false, 'export png fail.');\n            outstream.end();\n        });\n    },\n\n\n    _error: function(error) {\n\n    }\n}\n\nexports.setup = function(config) {\n    printer.init(config);\n}\nexports.handler = function(params, callback) {\n    printer.handler(params, callback);\n}",
			"file": "fserve/printer.js",
			"file_size": 6953,
			"file_write_time": 130882794680000000,
			"settings":
			{
				"buffer_size": 7024,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 93.0,
		"last_filter": "forma",
		"selected_items":
		[
			[
				"forma",
				"Format: Javascript"
			],
			[
				"json",
				"JSON Reindent: reindent file or selection"
			],
			[
				"for",
				"Format: Javascript"
			],
			[
				"j",
				"Format: Javascript"
			],
			[
				"git check",
				"Git: Checkout Current File"
			],
			[
				"java",
				"Format: Javascript"
			],
			[
				"",
				"ANF: Copy Current File"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"git push",
				"Git: Push Current Branch"
			],
			[
				"git qu",
				"Git: Quick Commit"
			],
			[
				"git ocm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git psuh",
				"Git: Push Current Branch"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git pul",
				"Git: Pull"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git bran",
				"Git: Change Branch"
			],
			[
				"set syn j",
				"Set Syntax: JSON"
			],
			[
				"git add ",
				"Git: Add Current File"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"git ddif",
				"Git: Add Current File"
			],
			[
				"git merge",
				"Git: Merge Branch"
			],
			[
				"git pull",
				"Git: Pull Current Branch"
			],
			[
				"git mer",
				"Git: Merge Branch"
			],
			[
				"git push ",
				"Git: Push Current Branch"
			],
			[
				"git new",
				"Git: New Branch"
			],
			[
				"chec",
				"Git: Checkout Current File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git log",
				"Git: Log All"
			],
			[
				"git grap",
				"Git: Graph All"
			],
			[
				"git reset",
				"Git: Reset (unstage) All"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"packagr",
				"Package Control: List Packages"
			],
			[
				"toggle",
				"SublimeLinter: Toggle Linter"
			],
			[
				"toogle",
				"SublimeLinter: No Column Only Marks Gutter"
			],
			[
				"instal",
				"Package Control: Advanced Install Package"
			],
			[
				"l",
				"Snippet: Lorem ipsum"
			],
			[
				"lo",
				"Snippet: Lorem ipsum"
			],
			[
				"Snippet: ",
				"Snippet: html"
			]
		],
		"width": 578.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"git",
			"1 + 1",
			"print a",
			"[x + 1 for x in a]",
			"for x in a:",
			"a = [1, 2, 3]",
			"1 + 1",
			"print 1",
			"print 'hello'",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dungntnew/vdev/konin-app",
		"/Users/dungntnew/vdev/konin-app/fserve"
	],
	"file_history":
	[
		"/Users/dungntnew/vdev/konin-app/www/js/controllers.js",
		"/Users/dungntnew/vdev/konin-app/www/js/services.js",
		"/Users/dungntnew/vdev/konin-app/www/js/webcam-controllers.js",
		"/Users/dungntnew/vdev/konin-app/fserve/config.json",
		"/Users/dungntnew/vdev/konin-app/fserve/printer.js",
		"/Users/dungntnew/vdev/konin-app/fserve/app.js",
		"/Users/dungntnew/vdev/konin-app/fserve/font.js",
		"/Users/dungntnew/vdev/konin-app/fserve/test.js",
		"/Users/dungntnew/vdev/konin-app/fserve/server2",
		"/Users/dungntnew/vdev/konin-app/fserve/json_data_2.json",
		"/Users/dungntnew/vdev/konin-app/fserve/raw_png_.text",
		"/Users/dungntnew/vdev/konin-app/www/templates/product-detail.html",
		"/Users/dungntnew/vdev/konin-app/www/css/style.css",
		"/Users/dungntnew/vdev/konin-app/fserve/json_data.json",
		"/Users/dungntnew/vdev/konin-app/www/css/font-face.css",
		"/Users/dungntnew/vdev/konin-app/fserve/node_modules/fabric/dist/fabric.js",
		"/Users/dungntnew/vdev/konin-app/www/index.html",
		"/Users/dungntnew/vdev/konin-app/www/js/upload.js",
		"/Users/dungntnew/vdev/konin-app/www/js/worker.filter.js",
		"/Users/dungntnew/vdev/konin-app/www/css/takephoto.css",
		"/Users/dungntnew/vdev/konin-app/www/a.html",
		"/Users/dungntnew/vdev/konin-app/www/lib/instagram_js_filter/js/worker.filter.js",
		"/Users/dungntnew/vdev/konin-app/www/lib/instagram_js_filter/index.html",
		"/Users/dungntnew/vdev/konin-app/www/lib/instagram_js_filter/js/filter.js",
		"/Users/dungntnew/vdev/konin-app/backup-sticker-other-button",
		"/Users/dungntnew/vdev/konin-app/www/lib/fabric.js/dist/fabric.js",
		"/Users/dungntnew/Desktop/manga_app_data/json/chapterInfo.json",
		"/Users/dungntnew/vdev/konin-app/www/x.html",
		"/Users/dungntnew/vdev/konin-app/www/lib/imageloader/dis/imageloader.all.min.js",
		"/Users/dungntnew/vdev/konin-app/undo-redo",
		"/Users/dungntnew/vdev/konin-app/www/templates/text-input-model.html",
		"/Users/dungntnew/vdev/konin-app/maks.js",
		"/Users/dungntnew/vdev/konin-app/www/img/demo.jpg",
		"/Users/dungntnew/vdev/konin-app/clipbyname",
		"/Users/dungntnew/vdev/konin-app/www/js/webcam.js",
		"/Users/dungntnew/vdev/airlink.scripts/bus/tools/scripts/sql/create_temp_tbl.sql",
		"/Users/dungntnew/vdev/konin-app/www/js/fabric-zoom.js",
		"/Users/dungntnew/vdev/konin-app/www/js/directives.js",
		"/Users/dungntnew/vdev/konin-app/save",
		"/Users/dungntnew/vdev/konin-app/remove_button",
		"/Users/dungntnew/vdev/konin-app/www/lib/fabric.js/dist/fabric.min.js",
		"/Users/dungntnew/vdev/konin-app/www/lib/fabric/dist/fabric.js",
		"/Users/dungntnew/vdev/konin-app/www/lib/fabric/package.json",
		"/Users/dungntnew/Desktop/honban_date/dev/mobile_daily_update.js",
		"/Users/dungntnew/Desktop/honban_date/dev/daily_update.js",
		"/Users/dungntnew/vdev/bussearch/bussearch/handlers/__init__.py",
		"/Users/dungntnew/vdev/bussearch/bussearch/forms/__init__.py",
		"/Users/dungntnew/vdev/bussearch/bussearch/forms/bus_search.py",
		"/Users/dungntnew/vdev/bussearch/bussearch/service/querybuilder.py",
		"/Users/dungntnew/vdev/bussearch/config.yml",
		"/Users/dungntnew/vdev/bussearch/bussearch/service/es_search.py",
		"/Users/dungntnew/vdev/bussearch/bussearch/__init__.py",
		"/Users/dungntnew/Library/Application Support/Sublime Text 3/Packages/User/AdvancedNewFile.sublime-settings",
		"/Users/dungntnew/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/dungntnew/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/dungntnew/vdev/bussearch/index.html",
		"/Users/dungntnew/vdev/startupAnim/js/temp.js",
		"/Users/dungntnew/vdev/startupAnim/js/src/startup_anim_run.js",
		"/Users/dungntnew/vdev/tbs/bin/index.html",
		"/Users/dungntnew/vdev/tbs/bin/css/style.css",
		"/Users/dungntnew/vdev/tbs/bin/js/r.js",
		"/Users/dungntnew/Desktop/pref2.txt"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_toPNG",
			"toContent",
			"toDraw",
			"_direct_content",
			"user_picture_path",
			"_content",
			"fabric.Last",
			"lastMaskImage",
			"toImageContent",
			"toDrawContent",
			"shouldShowAction('filter', 0)",
			"sit",
			"dollo",
			"\"fontFamily\": \"Impact\"",
			"fontFamily",
			"console",
			"center",
			"_content",
			"_load",
			"_toPNG",
			"_template",
			"template_path",
			"handler",
			"out_path",
			"_toPNG",
			"_blend",
			"_content",
			"_error",
			"widgetConfig",
			"toImageContent",
			"loadBackground",
			"PrintCanvas",
			"Preview",
			"previewer",
			"previwer",
			"remove-",
			"onPictureLoaded",
			"uploader",
			"uploaderHandler",
			"caption",
			"item-wrapper",
			"sticker-buttons",
			"activeFilterIndex",
			"filter",
			"console.log",
			"console.log(\"[previewer] view: \" + size.",
			"$scope.canvas.bac",
			" console.log(\"",
			" console.log(\"[",
			"console.log(",
			"console.log(\"[painter",
			"console",
			"activeFilterIndex",
			"startUndo",
			"exported",
			"content ",
			"content -",
			"addTab",
			"lastUsedTabIndex",
			"previe",
			"handler",
			"addTabselectedHandler",
			"onSelectedHanlders",
			"action-take-folder",
			"upload-picture-btn",
			"decided-design-btn",
			"fonts",
			"disabled",
			"text-setting",
			"font",
			"isWaitReselect",
			"uploader",
			"isSelectOther",
			"addImage",
			"onPictureLoaded",
			"onPictureLoaded\nonPictureLoaded",
			"onPictureLoaded",
			"uploader",
			"should",
			"retake-picture-btn",
			"action-retake-btn",
			"shouldShowTakePictureToolBars",
			"textInput",
			"$scope.popup",
			"$scope.alert",
			"カメラ",
			"起動",
			"button",
			"should for aciton",
			" console.log(\"should for aciton: \" + actionName + \" - index",
			" console.log(\"should for aciton: \" + actionName + \" - index: \" + ",
			"setLastFrame",
			"setLastFrame(callback)",
			"onPictureLoaded",
			"dropChangeHandler",
			"displayImage",
			"dropChangeHandler",
			"uploader",
			"applyFrame",
			"applyFa",
			"applyFrame",
			"addImage",
			"content-x ",
			"Deselect",
			"image-wrapper",
			"  setTimeout(function(){\n                            $scope.$apply(function(){\n                                $scope.selectTabWidthIndex(0, true);\n                            })\n                        })",
			"selectTabWithIndex",
			"onDesectedHandlers",
			"addTabDeselectedHandler",
			"deselectWidget",
			"addTab",
			"text-setting",
			"fade",
			"selectTabWithIndex",
			"retake-picture-btn",
			"fad",
			"background-color: transparent !important; ",
			"camera-action-bar",
			"activeTabIndex",
			"importScripts",
			"painter",
			"addText",
			"addSticker",
			"setCoords",
			"border-",
			"filter",
			"\\n",
			"\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\"fontFamily\": \"Print Clearly\"",
			"loadTemplate",
			"printCanvas",
			"Print",
			"printer",
			",",
			"'",
			"chapterID"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "fserve/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4656,
						"regions":
						{
						},
						"selection":
						[
							[
								870,
								870
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "fserve/printer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7024,
						"regions":
						{
						},
						"selection":
						[
							[
								375,
								381
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 165.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.186204457732,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 210.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 54.0
	},
	"pinned_build_system": "",
	"project": "konin-app.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"services",
				"www/js/services.js"
			],
			[
				"controllers",
				"www/js/controllers.js"
			],
			[
				"ccontrollers",
				"www/js/webcam-controllers.js"
			],
			[
				"contro",
				"www/js/controllers.js"
			],
			[
				"product",
				"www/templates/product-detail.html"
			],
			[
				"www/css/style.css",
				"www/css/style.css"
			],
			[
				"font",
				"www/css/font-face.css"
			],
			[
				"fabric",
				"fserve/node_modules/fabric/dist/fabric.js"
			],
			[
				"controller",
				"www/js/controllers.js"
			],
			[
				"service",
				"www/js/services.js"
			],
			[
				"controll",
				"www/js/controllers.js"
			],
			[
				"worker",
				"www/js/worker.filter.js"
			],
			[
				"index",
				"www/index.html"
			],
			[
				"pho",
				"www/css/takephoto.css"
			],
			[
				"style",
				"www/css/style.css"
			],
			[
				"phot",
				"www/css/takephoto.css"
			],
			[
				"fab",
				"www/lib/fabric.js/dist/fabric.js"
			],
			[
				"controlle",
				"www/js/controllers.js"
			],
			[
				"sty",
				"www/css/style.css"
			],
			[
				"serv",
				"www/js/services.js"
			],
			[
				"photo",
				"www/css/takephoto.css"
			],
			[
				"",
				"www/js/services.js"
			],
			[
				"x.",
				"www/x.html"
			],
			[
				"control",
				"www/js/controllers.js"
			],
			[
				"query",
				"bussearch/service/querybuilder.py"
			],
			[
				"querybu",
				"bussearch/service/querybuilder.py"
			],
			[
				"config",
				"config.yml"
			],
			[
				"searchhandle",
				"bussearch/handlers/bus_search.py"
			],
			[
				"star",
				"src/startup_anim_run.js"
			],
			[
				"js",
				"js/r.js"
			],
			[
				"st",
				"css/style.css"
			],
			[
				"ind",
				"index.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 268.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
